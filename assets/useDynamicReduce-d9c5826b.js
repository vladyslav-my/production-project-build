import{r as c,j as u,d as m,L as I,O as i,u as x,a as j}from"./index-a0e0f2b4.js";const S=({className:n,width:e,height:r,circle:t,children:a,isImage:s})=>{const o=c.useMemo(()=>s?{width:e,paddingBottom:`${r/e*100}%`}:{width:e,height:r},[e,r,s]);return u.jsx("div",{className:m(I.Skeleton,{},[n]),style:{borderRadius:t,...o},children:a})},$=({className:n,width:e,height:r,src:t="",fallback:a,errorFallback:s,isFixedWidth:o})=>{const[f,d]=c.useState(!0),[g,p]=c.useState(!1),E={paddingBottom:`${r/e*100}%`},y=o?{width:e}:null;return c.useLayoutEffect(()=>{const l=new Image;l.src=t,l.onerror=()=>{d(!1),p(!0)},l.onload=()=>{d(!1)}},[t]),g?s||null:f?a||u.jsx(S,{isImage:!0,width:e,height:r}):u.jsx("div",{className:m(i.Img,{},[n]),style:{...E,...y},children:u.jsx("img",{className:i.Img__this,src:t})})},L=(n,e)=>{const r=x(),t=j();c.useEffect(()=>{const a=Object.entries(n);return a.forEach(([s,o])=>{t.reducerManager.add(s,o),r({type:`@INIT ${s} reducer`})}),()=>{e&&a.forEach(([s,o])=>{t.reducerManager.remove(s),r({type:`@DESTROY ${s} reducer`})})}},[])};export{$ as I,S,L as u};
